// Mocks generated by Mockito 5.4.4 from annotations
// in arquitetura_flutter_clean/test/_utils/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:arquitetura_flutter_clean/src/core/exceptions/database/database_exception.dart'
    as _i17;
import 'package:arquitetura_flutter_clean/src/core/exceptions/network/network_exceptions.dart'
    as _i14;
import 'package:arquitetura_flutter_clean/src/core/network/dio_client.dart'
    as _i6;
import 'package:arquitetura_flutter_clean/src/data/datasource/local/actor/movie_local_data_source.dart'
    as _i9;
import 'package:arquitetura_flutter_clean/src/data/datasource/local/collections/movie_detail_collection.dart'
    as _i10;
import 'package:arquitetura_flutter_clean/src/data/datasource/remote/actor/actor_remote_data_source.dart'
    as _i11;
import 'package:arquitetura_flutter_clean/src/data/datasource/remote/movie/movie_remote_data_source.dart'
    as _i8;
import 'package:arquitetura_flutter_clean/src/data/models/actor_detail/actor_detail_model.dart'
    as _i4;
import 'package:arquitetura_flutter_clean/src/data/models/actor_social_media/actor_social_media_model.dart'
    as _i5;
import 'package:arquitetura_flutter_clean/src/data/models/movie_listings/movie_listings_model.dart'
    as _i3;
import 'package:arquitetura_flutter_clean/src/domain/entities/actor_detail/actor_detail_entity.dart'
    as _i20;
import 'package:arquitetura_flutter_clean/src/domain/entities/actor_social_media/actor_social_media_entity.dart'
    as _i21;
import 'package:arquitetura_flutter_clean/src/domain/entities/movie_detail/movie_detail_entity.dart'
    as _i18;
import 'package:arquitetura_flutter_clean/src/domain/entities/movie_listings/movie_listings_entity.dart'
    as _i15;
import 'package:arquitetura_flutter_clean/src/domain/repositories/actor/actor_repository.dart'
    as _i19;
import 'package:arquitetura_flutter_clean/src/domain/repositories/movie/movie_repository.dart'
    as _i12;
import 'package:arquitetura_flutter_clean/src/domain/usecases/actor/actor_usecases.dart'
    as _i23;
import 'package:arquitetura_flutter_clean/src/domain/usecases/movie/movie_usecases.dart'
    as _i22;
import 'package:dio/dio.dart' as _i2;
import 'package:fpdart/fpdart.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i16;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieListingsModel_1 extends _i1.SmartFake
    implements _i3.MovieListingsModel {
  _FakeMovieListingsModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActorDetailModel_2 extends _i1.SmartFake
    implements _i4.ActorDetailModel {
  _FakeActorDetailModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActorSocialMediaModel_3 extends _i1.SmartFake
    implements _i5.ActorSocialMediaModel {
  _FakeActorSocialMediaModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i6.DioClient {
  MockDioClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Response<dynamic>> get(
    String? url, {
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i2.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i7.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i7.Future<_i2.Response<dynamic>>);

  @override
  _i7.Future<_i2.Response<dynamic>> post(
    String? uri, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i2.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i7.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #post,
            [uri],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i7.Future<_i2.Response<dynamic>>);

  @override
  _i7.Future<_i2.Response<dynamic>> put(
    String? uri, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i2.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i7.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #put,
            [uri],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i7.Future<_i2.Response<dynamic>>);

  @override
  _i7.Future<_i2.Response<dynamic>> patch(
    String? uri, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i2.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i7.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #patch,
            [uri],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i7.Future<_i2.Response<dynamic>>);

  @override
  _i7.Future<dynamic> delete(
    String? uri, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i2.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i8.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i3.MovieListingsModel> getPopularMovies({required int? page}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
          {#page: page},
        ),
        returnValue:
            _i7.Future<_i3.MovieListingsModel>.value(_FakeMovieListingsModel_1(
          this,
          Invocation.method(
            #getPopularMovies,
            [],
            {#page: page},
          ),
        )),
      ) as _i7.Future<_i3.MovieListingsModel>);

  @override
  _i7.Future<_i3.MovieListingsModel> getTopRateMovies({required int? page}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRateMovies,
          [],
          {#page: page},
        ),
        returnValue:
            _i7.Future<_i3.MovieListingsModel>.value(_FakeMovieListingsModel_1(
          this,
          Invocation.method(
            #getTopRateMovies,
            [],
            {#page: page},
          ),
        )),
      ) as _i7.Future<_i3.MovieListingsModel>);

  @override
  _i7.Future<_i3.MovieListingsModel> getMovieCredits({required int? moveId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieCredits,
          [],
          {#moveId: moveId},
        ),
        returnValue:
            _i7.Future<_i3.MovieListingsModel>.value(_FakeMovieListingsModel_1(
          this,
          Invocation.method(
            #getMovieCredits,
            [],
            {#moveId: moveId},
          ),
        )),
      ) as _i7.Future<_i3.MovieListingsModel>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i9.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> saveMovieDetail(
          {required _i10.MovieDetailCollection? movieDetailCollection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMovieDetail,
          [],
          {#movieDetailCollection: movieDetailCollection},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteMovieDetail({required int? movieId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMovieDetail,
          [],
          {#movieId: movieId},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> isSaveMovieDetail({required int? movieId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #isSaveMovieDetail,
          [],
          {#movieId: movieId},
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<List<_i10.MovieDetailCollection>> getSaveMovieDetail() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSaveMovieDetail,
          [],
        ),
        returnValue: _i7.Future<List<_i10.MovieDetailCollection>>.value(
            <_i10.MovieDetailCollection>[]),
      ) as _i7.Future<List<_i10.MovieDetailCollection>>);
}

/// A class which mocks [ActorRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockActorRemoteDataSource extends _i1.Mock
    implements _i11.ActorRemoteDataSource {
  MockActorRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i4.ActorDetailModel> getActorDetail({required String? actorId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActorDetail,
          [],
          {#actorId: actorId},
        ),
        returnValue:
            _i7.Future<_i4.ActorDetailModel>.value(_FakeActorDetailModel_2(
          this,
          Invocation.method(
            #getActorDetail,
            [],
            {#actorId: actorId},
          ),
        )),
      ) as _i7.Future<_i4.ActorDetailModel>);

  @override
  _i7.Future<_i5.ActorSocialMediaModel> getActorSocialMedia(
          {required String? actorId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActorSocialMedia,
          [],
          {#actorId: actorId},
        ),
        returnValue: _i7.Future<_i5.ActorSocialMediaModel>.value(
            _FakeActorSocialMediaModel_3(
          this,
          Invocation.method(
            #getActorSocialMedia,
            [],
            {#actorId: actorId},
          ),
        )),
      ) as _i7.Future<_i5.ActorSocialMediaModel>);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i12.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>
      getTopRateMovies({required int? page}) => (super.noSuchMethod(
            Invocation.method(
              #getTopRateMovies,
              [],
              {#page: page},
            ),
            returnValue: _i7.Future<
                _i13.Either<_i14.NetworkException,
                    _i15.MovieListingsEntity>>.value(_i16.dummyValue<
                _i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>(
              this,
              Invocation.method(
                #getTopRateMovies,
                [],
                {#page: page},
              ),
            )),
          ) as _i7.Future<
              _i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>);

  @override
  _i7.Future<_i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>
      getPopularMovies({required int? page}) => (super.noSuchMethod(
            Invocation.method(
              #getPopularMovies,
              [],
              {#page: page},
            ),
            returnValue: _i7.Future<
                _i13.Either<_i14.NetworkException,
                    _i15.MovieListingsEntity>>.value(_i16.dummyValue<
                _i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>(
              this,
              Invocation.method(
                #getPopularMovies,
                [],
                {#page: page},
              ),
            )),
          ) as _i7.Future<
              _i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>);

  @override
  _i7.Future<_i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>
      getMoviesCredit({required int? movieId}) => (super.noSuchMethod(
            Invocation.method(
              #getMoviesCredit,
              [],
              {#movieId: movieId},
            ),
            returnValue: _i7.Future<
                _i13.Either<_i14.NetworkException,
                    _i15.MovieListingsEntity>>.value(_i16.dummyValue<
                _i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>(
              this,
              Invocation.method(
                #getMoviesCredit,
                [],
                {#movieId: movieId},
              ),
            )),
          ) as _i7.Future<
              _i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>);

  @override
  _i7.Future<_i13.Either<_i17.DatabaseException, List<_i18.MovieDetailEntity>>>
      getSaveMovieDetails() => (super.noSuchMethod(
            Invocation.method(
              #getSaveMovieDetails,
              [],
            ),
            returnValue: _i7.Future<
                _i13.Either<_i17.DatabaseException,
                    List<_i18.MovieDetailEntity>>>.value(_i16.dummyValue<
                _i13
                .Either<_i17.DatabaseException, List<_i18.MovieDetailEntity>>>(
              this,
              Invocation.method(
                #getSaveMovieDetails,
                [],
              ),
            )),
          ) as _i7.Future<
              _i13
              .Either<_i17.DatabaseException, List<_i18.MovieDetailEntity>>>);

  @override
  _i7.Future<_i13.Either<_i17.DatabaseException, void>> saveMovieDetails(
          {required _i18.MovieDetailEntity? movieDetailEntity}) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMovieDetails,
          [],
          {#movieDetailEntity: movieDetailEntity},
        ),
        returnValue:
            _i7.Future<_i13.Either<_i17.DatabaseException, void>>.value(
                _i16.dummyValue<_i13.Either<_i17.DatabaseException, void>>(
          this,
          Invocation.method(
            #saveMovieDetails,
            [],
            {#movieDetailEntity: movieDetailEntity},
          ),
        )),
      ) as _i7.Future<_i13.Either<_i17.DatabaseException, void>>);

  @override
  _i7.Future<_i13.Either<_i17.DatabaseException, void>> deleteMovieDetail(
          {required int? movieId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMovieDetail,
          [],
          {#movieId: movieId},
        ),
        returnValue:
            _i7.Future<_i13.Either<_i17.DatabaseException, void>>.value(
                _i16.dummyValue<_i13.Either<_i17.DatabaseException, void>>(
          this,
          Invocation.method(
            #deleteMovieDetail,
            [],
            {#movieId: movieId},
          ),
        )),
      ) as _i7.Future<_i13.Either<_i17.DatabaseException, void>>);

  @override
  _i7.Future<_i13.Either<_i17.DatabaseException, bool>> isSavedMovieDetail(
          {required int? movieId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #isSavedMovieDetail,
          [],
          {#movieId: movieId},
        ),
        returnValue:
            _i7.Future<_i13.Either<_i17.DatabaseException, bool>>.value(
                _i16.dummyValue<_i13.Either<_i17.DatabaseException, bool>>(
          this,
          Invocation.method(
            #isSavedMovieDetail,
            [],
            {#movieId: movieId},
          ),
        )),
      ) as _i7.Future<_i13.Either<_i17.DatabaseException, bool>>);
}

/// A class which mocks [ActorRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockActorRepository extends _i1.Mock implements _i19.ActorRepository {
  MockActorRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i13.Either<_i14.NetworkException, _i20.ActorDetailEntity>>
      getActorDetail({required String? actorId}) => (super.noSuchMethod(
            Invocation.method(
              #getActorDetail,
              [],
              {#actorId: actorId},
            ),
            returnValue: _i7.Future<
                _i13.Either<_i14.NetworkException,
                    _i20.ActorDetailEntity>>.value(_i16.dummyValue<
                _i13.Either<_i14.NetworkException, _i20.ActorDetailEntity>>(
              this,
              Invocation.method(
                #getActorDetail,
                [],
                {#actorId: actorId},
              ),
            )),
          ) as _i7.Future<
              _i13.Either<_i14.NetworkException, _i20.ActorDetailEntity>>);

  @override
  _i7.Future<_i13.Either<_i14.NetworkException, _i21.ActorSocialMediaEntity>>
      getActorSocialMedia({required String? actorId}) => (super.noSuchMethod(
            Invocation.method(
              #getActorSocialMedia,
              [],
              {#actorId: actorId},
            ),
            returnValue: _i7.Future<
                _i13.Either<_i14.NetworkException,
                    _i21.ActorSocialMediaEntity>>.value(_i16.dummyValue<
                _i13
                .Either<_i14.NetworkException, _i21.ActorSocialMediaEntity>>(
              this,
              Invocation.method(
                #getActorSocialMedia,
                [],
                {#actorId: actorId},
              ),
            )),
          ) as _i7.Future<
              _i13.Either<_i14.NetworkException, _i21.ActorSocialMediaEntity>>);
}

/// A class which mocks [MovieUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieUsecases extends _i1.Mock implements _i22.MovieUsecases {
  MockMovieUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>
      getPopularMovies({required int? page}) => (super.noSuchMethod(
            Invocation.method(
              #getPopularMovies,
              [],
              {#page: page},
            ),
            returnValue: _i7.Future<
                _i13.Either<_i14.NetworkException,
                    _i15.MovieListingsEntity>>.value(_i16.dummyValue<
                _i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>(
              this,
              Invocation.method(
                #getPopularMovies,
                [],
                {#page: page},
              ),
            )),
          ) as _i7.Future<
              _i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>);

  @override
  _i7.Future<_i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>
      getTopRatesMovie({required int? page}) => (super.noSuchMethod(
            Invocation.method(
              #getTopRatesMovie,
              [],
              {#page: page},
            ),
            returnValue: _i7.Future<
                _i13.Either<_i14.NetworkException,
                    _i15.MovieListingsEntity>>.value(_i16.dummyValue<
                _i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>(
              this,
              Invocation.method(
                #getTopRatesMovie,
                [],
                {#page: page},
              ),
            )),
          ) as _i7.Future<
              _i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>);

  @override
  _i7.Future<_i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>
      getMovieCredits({required int? moveId}) => (super.noSuchMethod(
            Invocation.method(
              #getMovieCredits,
              [],
              {#moveId: moveId},
            ),
            returnValue: _i7.Future<
                _i13.Either<_i14.NetworkException,
                    _i15.MovieListingsEntity>>.value(_i16.dummyValue<
                _i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>(
              this,
              Invocation.method(
                #getMovieCredits,
                [],
                {#moveId: moveId},
              ),
            )),
          ) as _i7.Future<
              _i13.Either<_i14.NetworkException, _i15.MovieListingsEntity>>);

  @override
  _i7.Future<_i13.Either<_i17.DatabaseException, List<_i18.MovieDetailEntity>>>
      getSaveMovieDetails() => (super.noSuchMethod(
            Invocation.method(
              #getSaveMovieDetails,
              [],
            ),
            returnValue: _i7.Future<
                _i13.Either<_i17.DatabaseException,
                    List<_i18.MovieDetailEntity>>>.value(_i16.dummyValue<
                _i13
                .Either<_i17.DatabaseException, List<_i18.MovieDetailEntity>>>(
              this,
              Invocation.method(
                #getSaveMovieDetails,
                [],
              ),
            )),
          ) as _i7.Future<
              _i13
              .Either<_i17.DatabaseException, List<_i18.MovieDetailEntity>>>);

  @override
  _i7.Future<_i13.Either<_i17.DatabaseException, void>> toggleBookmark(
          {required _i18.MovieDetailEntity? movieDetailEntity}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleBookmark,
          [],
          {#movieDetailEntity: movieDetailEntity},
        ),
        returnValue:
            _i7.Future<_i13.Either<_i17.DatabaseException, void>>.value(
                _i16.dummyValue<_i13.Either<_i17.DatabaseException, void>>(
          this,
          Invocation.method(
            #toggleBookmark,
            [],
            {#movieDetailEntity: movieDetailEntity},
          ),
        )),
      ) as _i7.Future<_i13.Either<_i17.DatabaseException, void>>);
}

/// A class which mocks [ActorUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockActorUsecases extends _i1.Mock implements _i23.ActorUsecases {
  MockActorUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i13.Either<_i14.NetworkException, _i20.ActorDetailEntity>>
      getActorDetail({required String? actorId}) => (super.noSuchMethod(
            Invocation.method(
              #getActorDetail,
              [],
              {#actorId: actorId},
            ),
            returnValue: _i7.Future<
                _i13.Either<_i14.NetworkException,
                    _i20.ActorDetailEntity>>.value(_i16.dummyValue<
                _i13.Either<_i14.NetworkException, _i20.ActorDetailEntity>>(
              this,
              Invocation.method(
                #getActorDetail,
                [],
                {#actorId: actorId},
              ),
            )),
          ) as _i7.Future<
              _i13.Either<_i14.NetworkException, _i20.ActorDetailEntity>>);

  @override
  _i7.Future<_i13.Either<_i14.NetworkException, _i21.ActorSocialMediaEntity>>
      getActorSocialMedia({required String? actorId}) => (super.noSuchMethod(
            Invocation.method(
              #getActorSocialMedia,
              [],
              {#actorId: actorId},
            ),
            returnValue: _i7.Future<
                _i13.Either<_i14.NetworkException,
                    _i21.ActorSocialMediaEntity>>.value(_i16.dummyValue<
                _i13
                .Either<_i14.NetworkException, _i21.ActorSocialMediaEntity>>(
              this,
              Invocation.method(
                #getActorSocialMedia,
                [],
                {#actorId: actorId},
              ),
            )),
          ) as _i7.Future<
              _i13.Either<_i14.NetworkException, _i21.ActorSocialMediaEntity>>);
}
